@using bikeRental.Application;
@using bikeRental.Application.Models.User;
@using bikeRental.Core.Enums;
@model PaginatedList<bikeRental.Application.Models.User.UserModel>
@{
    ViewData["Title"] = "Customers";
    var filterString = ViewData["filterString"] as string;

}

@ViewData["CurrentCategory"]
<div class="container px-4 pt-2">
<h2>Users</h2>
<div class="container mt-4">
    <div class="row justify-content-between">
        <div class="col-6">
        <form asp-controller="Users" asp-action="Index" asp-route-searchString="@ViewData["searchString"]" method="get">
            <div class="input-group">
                     <input type="text" placeholder="Start typing…" name="searchString" value="@ViewData["searchString"]" class="form-control"/>
                      <select class="form-select" aria-label="Example select with button addon" name="filterString">
                            <option value="">All Roles</option>
                            @foreach (var type in Enum.GetNames(typeof(Role)))
                            {
                                <option value="@type" selected="@(type == filterString)">@type</option>
                            }
                        </select>
                     <div class="input-group-append">
                          <a class="btn btn-light" asp-controller="Users" asp-action="Index">
								<i class="bi bi-x-lg"></i>
							</a>
                         <button type="submit" class="btn btn-warning">Search <i class="bi bi-bicycle"></i></button>
                         <a class="btn btn-light" asp-action="Index">Back to Full List</a>
                     </div>
            </div>
        </form>
        </div>
        <div class="col-4">
        @if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
        {
            <div>

                <a class="btn btn-outline-success" asp-controller="Users" asp-action="Create"><i class="bi bi-person-add">  Create new user</i></a>
            </div>
        }
        </div>
    </div>
</div>

<table class="table table-hover mt-5 mx-auto">
    <thead>
        <tr>           
            @foreach (var prop in typeof(UserModel).GetProperties())
            {
                @if (prop.Name != "Id" && prop.Name != "Orders" && prop.Name != "Username" && prop.Name != "Role" && prop.Name != "Status")
                {
                    <th>
                        @prop.Name
                        <a style="color:black" asp-action="Index" asp-route-sortOrder=@($"{prop.Name}Desc")><i class="bi bi-caret-up-fill"></i></a>
                        <a style="color:black" asp-action="Index" asp-route-sortOrder=@($"{prop.Name}")><i class="bi bi-caret-down-fill"></i></a>
                    </th>
                }
                else if (prop.Name != "Id" && prop.Name != "Orders" && prop.Name != "Username")
                {
                    <th>
                        @prop.Name
                       
                    </th>
                }
            }
            @if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
            {   
                  <th>
                     Edit/Delete
                  </th>       
            }
        </tr>        
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.Email</td>
                <td>@user.Role</td>
                <td>@user.Status</td>
                @if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
                {
                    <td>
                        <a class="btn btn-outline-primary url" asp-controller="Users" asp-action="Redirect" asp-route-name="Edit" asp-route-id="@user.Id"><i class="bi bi-pen"></i></a>
                            @if(user.Status != AccountStatus.Disabled)
                            {
                                 <a class="btn btn-outline-danger url" asp-controller="Users" asp-action="Redirect" asp-route-name="Delete"  asp-route-id="@user.Id"><i class="bi bi-trash"></i></a>
                            }
                    </td> 
                }
            </tr>
        }
    </tbody>
</table>

@{
		var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.HasNextPage ? "disabled" : "";
	}

    <a asp-action="Index"
        asp-controller="Users"
       asp-route-searchString="@ViewData[""]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-filterString="@ViewData["filterString"]"
       asp-route-sortOrder="@ViewData["sortOrder"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
        asp-controller="Users"
       asp-route-searchString="@ViewData["searchString"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-filterString="@ViewData["filterString"]"
       asp-route-sortOrder="@ViewData["sortOrder"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>

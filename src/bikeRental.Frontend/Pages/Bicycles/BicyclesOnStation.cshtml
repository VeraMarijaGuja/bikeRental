@using bikeRental.Application;
@using bikeRental.Application.Models.Bicycle;
@using bikeRental.Core.Enums;
@model PaginatedList<bikeRental.Application.Models.Bicycle.BicycleModel>

@{
	ViewData["Title"] = "Bicylces";
    var filterString = ViewData["filterString"] as string;

}

<div class="container px-4 pt-2">
	<h2>Bicycles on @ViewData["address"] </h2>
	<div class="container">
		<div class="row justify-content-between">
				<div class="col-8">
					<form asp-controller="Bicycles" asp-action="GetByStation" method="get">
					<div class="input-group">
						<input type="text" placeholder="Start typing description…" name="SearchString" value="@ViewData["searchString"]" class="form-control" />
                        <select class="form-select" aria-label="Example select with button addon" name="filterString">
                            <option value="">All types</option>
                            @foreach (var type in Enum.GetNames(typeof(BikeType)))
                            {
                                <option value="@type" selected="@(type == filterString)">@type</option>
                            }
                        </select>
						<div class="input-group-append">
                            <a class="btn btn-light" asp-controller="Bicycles" asp-action="GetByStation" asp-route-id="@ViewData["id"]">
								<i class="bi bi-x-lg"></i>
							</a>
							<button type="submit" class="btn btn-warning">Search <i class="bi bi-bicycle"></i></button>
							<a class="btn btn-light" asp-controller="Stations" asp-action="Index">Back to stations</a>
						</div>
					</div>
				</form>
				</div>
				<div class="col-4">
					@if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
					{
						<div>

						<a class="btn btn-outline-success" asp-controller="Bicycles" asp-action="Create" asp-route-stationId="@ViewData["id"]" asp-route-cname="GetByStation"><i class="bi bi-house-add"> Create new bicycle</i></a>
						</div>
					}
				</div>
		</div>
	</div>

	<table class="table table-hover mt-5">
		<tr>
			@foreach (var prop in typeof(BicycleModel).GetProperties())
			{
                @if (prop.Name == "Description")
				{
                    <th>
					@prop.Name
                        <a style="color:black" asp-action="GetByStation" asp-route-sortOrder=@($"{prop.Name}Desc")><i class="bi bi-caret-up-fill"></i></a>
                        <a style="color:black" asp-action="GetByStation" asp-route-sortOrder=@($"{prop.Name}")><i class="bi bi-caret-down-fill"></i></a>
                    </th>
				}
				else if (prop.Name != "Id" && prop.Name != "Orders" && prop.Name != "Station"  && prop.Name != "Status")
				{
					<th>
						@prop.Name
					</th>
				}
			}
			@if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
			{
				<th>
					Edit/Delete
				</th>
			}
            @if (User.Identity!.IsAuthenticated)
            {
                <th>
                    Rent
                </th>
            }

		</tr>
		@foreach (var item in Model)
		{
            if(item.Status != BikeStatus.Disabled)
            {
                <tr>
                    <td>
                        @item.Type
                    </td>
                    <td>
                        @item.Description
                    </td>
                    <td>
                        @item.Price
                    </td>
                    @if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator") && item.Status != BikeStatus.InUse)
                    {
                        <td>
                            <a class="btn btn-outline-primary" asp-controller="Bicycles" asp-action="Edit" asp-route-id="@item.Id" asp-route-stationId="@item.Station.Id" asp-route-cname="GetByStation"><i class="bi bi-pen"></i></a>
                            <a class="btn btn-outline-danger" asp-controller="Bicycles" asp-action="Delete" asp-route-id="@item.Id" asp-route-stationId="@item.Station.Id" asp-route-cname="GetByStation"><i class="bi bi-trash"></i></a>
                        </td>
                    }
                    @if (User.Identity!.IsAuthenticated && item.Status == BikeStatus.Available)
                    {
                        <td>
                            <a class="btn btn-outline-primary" asp-controller="Orders" asp-action="Create" asp-route-bicycleId="@item.Id"><i class="bi bi-plus-lg"></i></a>
                        </td>
                    }
                </tr>
            }           
		}
	</table>

	@{
		var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.HasNextPage ? "disabled" : "";
	}

	<a asp-action="GetByStation"
        asp-controller="Bicycles"
       asp-route-id="@ViewData["id"]"
       asp-route-searchString="@ViewData[""]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-filterString="@ViewData["filterString"]"
       asp-route-sortOrder="@ViewData["sortOrder"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="GetByStation"
       asp-controller="Bicycles"
       asp-route-id="@ViewData["id"]"
       asp-route-searchString="@ViewData["searchString"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-filterString="@ViewData["filterString"]"
       asp-route-sortOrder="@ViewData["sortOrder"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>

